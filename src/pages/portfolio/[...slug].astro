---
import { type CollectionEntry, getCollection, render } from 'astro:content';
import PortfolioPost from '../../layouts/PortfolioPost.astro';
import { calculateReadingTimeFromHtml } from '../../lib/reading';

export async function getStaticPaths() {
  const posts = await getCollection('portfolio');
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}
type Props = CollectionEntry<'portfolio'>;

const post = Astro.props;
const posts = await getCollection('portfolio');
// Sort by date descending for navigation
const sorted = posts.slice().sort((a, b) => +b.data.pubDate - +a.data.pubDate);
const index = sorted.findIndex((p) => p.id === post.id);
const prev = index < sorted.length - 1 ? { id: sorted[index + 1].id, title: sorted[index + 1].data.title } : null;
const next = index > 0 ? { id: sorted[index - 1].id, title: sorted[index - 1].data.title } : null;

const { Content } = await render(post);
const html = await Astro.slots.render('default');
const readingTimeMin = calculateReadingTimeFromHtml(html ?? '');
---

<PortfolioPost {...post.data} prevPost={prev} nextPost={next} readingTimeMin={readingTimeMin}>
  <Content />
</PortfolioPost>